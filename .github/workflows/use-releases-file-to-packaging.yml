#=====================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: Use Releases file to packaging
#=====================================================================================

name: Use Releases file to Packaging

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Select the source branch"
        required: false
        default: "lede"
        type: choice
        options:
          - official
          - lede
          - immortalwrt
      openwrt_board:
        description: "Select device board"
        required: false
        default: "dg3399"
        type: choice
        options:
          - dg3399
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "6.6.y"
        type: choice
        options:
          - 5.10.y
          - 5.10.210
          - 5.10.216
          - 5.10.218
          - 6.1.y
          - 6.1.81
          - 6.1.87
          - 6.1.92
          - 6.6.y
          - 6.6.28
          - 6.6.30
          - 6.6.32
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      kernel_repo:
        description: "Set the kernel repository"
        required: false
        default: "Lemon1151/kernel"
        type: choice
        options:
          - Lemon1151/kernel
          - ophub/kernel
      kernel_usage:
        description: "Set the tags of the stable kernel."
        required: false
        default: "stable"
        type: choice
        options:
          - stable
          - flippy
          - dev
          - beta
      openwrt_storage:
        description: "Select image storage type."
        required: false
        default: "save"
        type: choice
        options:
          - save
          - temp
      builder_name:
        description: "Set OpenWrt builder signature."
        required: false
        default: "Lemon1151"
        type: choice
        options:
          - ophub
          - angel
          - Lemon1151

env:
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q) 2>/dev/null
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo swapoff -a
          sudo rm -f /swapfile /mnt/swapfile
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo sed -i '/NVM_DIR/d;/skel/d' /root/{.bashrc,.profile}
          sudo rm -rf ~/{.cargo,.dotnet,.rustup}
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Create simulated physical disk
        run: |
          mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
          root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4)
          sudo truncate -s "${mnt_size}"G /mnt/mnt.img
          sudo truncate -s "${root_size}"G /root.img
          sudo losetup /dev/loop6 /mnt/mnt.img
          sudo losetup /dev/loop7 /root.img
          sudo pvcreate /dev/loop6
          sudo pvcreate /dev/loop7
          sudo vgcreate github /dev/loop6 /dev/loop7
          sudo lvcreate -n runner -l 100%FREE github
          sudo mkfs.xfs /dev/github/runner
          sudo mkdir -p /builder
          sudo mount /dev/github/runner /builder
          sudo chown -R runner.runner /builder
          df -Th

      - name: Download OpenWrt [ ${{ inputs.source_branch }} ]
        id: down
        working-directory: /builder
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          # Set up compilation source code
          if [[ "${{ inputs.source_branch }}" == *"official"* ]]; then
              REPO_URL="https://github.com/openwrt/openwrt"
              REPO_BRANCH="main"
              TAGS_NAME="official"
          elif [[ "${{ inputs.source_branch }}" == *"lede"* ]]; then
              REPO_URL="https://github.com/coolsnowwolf/lede"
              REPO_BRANCH="master"
              TAGS_NAME="lede"
          elif [[ "${{ inputs.source_branch }}" == *"immortalwrt"* ]]; then
              REPO_URL="https://github.com/immortalwrt/immortalwrt"
              REPO_BRANCH="master"
              TAGS_NAME="immortalwrt"
          else
              echo "Unknown source code repository."
              exit 1
          fi

          armvirt_tarfile_path="openwrt/output"
          [[ -d "${armvirt_tarfile_path}" ]] || mkdir -p ${armvirt_tarfile_path}
          ln -sf /builder/openwrt ${GITHUB_WORKSPACE}/openwrt
          ln -sf /builder/openwrt /home/runner/work/_actions/wf-nb/dg3399-openwrt/main/openwrt

          latest_version="$(curl -s \
                              -H "Accept: application/vnd.github+json" \
                              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                              https://api.github.com/repos/${GITHUB_REPOSITORY}/releases?per_page=100 |
                              jq '.[]' |
                              jq -s --arg RTK "OpenWrt_${{ inputs.source_branch }}_" '.[] | select(.tag_name | contains($RTK))' |
                              jq -s '.[].assets[] | {data:.updated_at, url:.browser_download_url}' |
                              jq -s --arg BOARD "-rootfs.tar.gz" '.[] | select(.url | endswith($BOARD))' |
                              jq -s 'sort_by(.data)|reverse[]' |
                              jq -s '.[0]' -c
                          )"

          [[ "${latest_version}" == "null" ]] && echo "Invalid OpenWrt rootfs download address." && exit 1
          latest_updated_at="$(echo ${latest_version} | jq -r '.data')"
          latest_url="$(echo ${latest_version} | jq -r '.url')"

          openwrt_filename="${latest_url##*/}"
          curl -fsSL "${latest_url}" -o "${armvirt_tarfile_path}/${openwrt_filename}"
          [[ "${?}" -ne "0" ]] && echo "Invalid OpenWrt rootfs download address." && exit 1

          echo "build_tag=OpenWrt_${{ inputs.source_branch }}_${{ inputs.openwrt_storage }}_$(date +"%Y.%m")" >> ${GITHUB_OUTPUT}
          df -hT ${PWD}
          echo "REPO_URL=${REPO_URL}" >> ${GITHUB_OUTPUT}
          echo "TAGS_NAME=${TAGS_NAME}" >> ${GITHUB_OUTPUT}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Packaging OpenWrt
        if: ${{ steps.down.outputs.status }} == 'success' && !cancelled()
        uses: wf-nb/dg3399-openwrt@main
        with:
          openwrt_path: openwrt/output/*rootfs.tar.gz
          openwrt_board: ${{ inputs.openwrt_board }}
          openwrt_kernel: ${{ inputs.openwrt_kernel }}
          auto_kernel: ${{ inputs.auto_kernel }}
          kernel_repo: ${{ inputs.kernel_repo }}
          kernel_usage: ${{ inputs.kernel_usage }}
          builder_name: ${{ inputs.builder_name }}

      - name: Upload the packaged OpenWrt
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.down.outputs.build_tag }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ### OpenWrt Image information
            - Default IP: 192.168.1.1
            - Default username: root
            - Default password: password
            - Default WIFI name: OpenWrt
            - Default WIFI password: none
            ### Install to EMMC
            - Login to OpenWrt → System → Amlogic Service → Install OpenWrt
            ### OpenWrt source code
            - [${{ steps.down.outputs.TAGS_NAME }}](${{ steps.down.outputs.REPO_URL }})
            ### OpenWrt Image Verification
            - sha256sum
